<type access-modifier="public" name="Explorer" display-name="Explorer" uuid="9013d06f-00da-4a39-a352-02b02f4a6679" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="5" description="">
	<designed target="X" value="0" ver="5"/>
	<designed target="Y" value="0" ver="5"/>
	<designed target="ZValue" value="0" ver="5"/>
	<designed target="Rotation" value="0" ver="5"/>
	<designed target="Scale" value="1" ver="5"/>
	<designed target="Visible" value="true" ver="5"/>
	<designed target="Opacity" value="1" ver="5"/>
	<designed target="Enabled" value="true" ver="5"/>
	<designed target="Tooltip" value="" ver="5"/>
	<designed target="Width" value="1000" ver="5"/>
	<designed target="Height" value="400" ver="5"/>
	<designed target="RoundingRadius" value="0" ver="5"/>
	<designed target="PenColor" value="4278190080" ver="5"/>
	<designed target="PenStyle" value="1" ver="5"/>
	<designed target="PenWidth" value="1" ver="5"/>
	<designed target="BrushColor" value="4278190080" ver="5"/>
	<designed target="BrushStyle" value="0" ver="5"/>
	<object access-modifier="private" name="private" display-name="private" uuid="7b9294e9-0adf-4c18-84b1-14829a98ad33" base-type="" base-type-id="00000000-0000-0000-0000-000000000000" ver="5">
		<object access-modifier="private" name="theme" display-name="theme" uuid="df13c6c2-4672-46d3-935e-d4f4dc8523cd" base-type="Theme" base-type-id="05d4d7df-0f8e-4ec1-ac85-b5460e30af81" ver="5">
			<do-trace access-modifier="private" target="BackgroundColor" ver="5">
				<body>
					<![CDATA[here.pTheme.BackgroundColor]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="ForegroundColor" ver="5">
				<body>
					<![CDATA[here.pTheme.ForegroundColor]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="DisabledFontColor" ver="5">
				<body>
					<![CDATA[here.pTheme.DisabledFontColor]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="EditorBrushColor" ver="5">
				<body>
					<![CDATA[here.pTheme.EditorBrushColor]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="EditorFontColor" ver="5">
				<body>
					<![CDATA[here.pTheme.EditorFontColor]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="SelectionColor" ver="5">
				<body>
					<![CDATA[here.pTheme.SelectionColor]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="BorderColor" ver="5">
				<body>
					<![CDATA[here.pTheme.BorderColor]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="DisabledBorderColor" ver="5">
				<body>
					<![CDATA[here.pTheme.DisabledBorderColor]]>
				</body>
			</do-trace>
		</object>
		<object access-modifier="private" name="Drag" display-name="Drag" uuid="b3d9cb93-9683-415c-a6f9-10b8e61cb78b" base-type="DragNDrop" base-type-id="c4ddb32f-3653-44c8-be57-3a595e10c2fb" ver="5">
			<designed target="DragEnabled" value="true" ver="5"/>
			<designed target="DropEnabled" value="false" ver="5"/>
			<designed target="Image" value="" ver="5"/>
		</object>
		<do access-modifier="private" name="SaveLayout" display-name="SaveLayout" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="javascript">
				<![CDATA[var filePath = GetLayoutFilePath();
try
{
	var settings = 
	{
		"Tree": {
			"Visible": TreeVisible.Value,
			"Width": Splitter.Distance
		}
	};

	var folderPath = Files.ParentPath(filePath);
	if (!Files.Exists(folderPath))
		Files.CreateRecursiveFolder(folderPath);
		
	Files.WriteTextFile(filePath, JSON.stringify(settings, null, 2));
}
catch(error)
{
	log("Не удалось сохранить расположение элементов в "  + filePath + ":\n" + error);
}]]>
			</body>
		</do>
		<do access-modifier="private" name="LoadLayout" display-name="LoadLayout" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="javascript">
				<![CDATA[var filePath = GetLayoutFilePath();
if (Files.Exists(filePath))
{
	//log("Загрузка расположения элементов из файла "  + filePath);
	try
	{
		var json = Files.ReadTextFile(filePath);
		var settings = JSON.parse(json);
		
		var tree = settings.Tree;
		if (tree != undefined)
		{
			Splitter.Distance = tree.Width;
			TreeVisible = tree.Visible == true;
		}
		
		if (ItemTree.SizeLimits.MinWidth != Splitter.Distance)
			UpdateLayout();
	}
	catch(error)
	{
		log("Не удалось загрузить расположение элементов из "  + filePath + ":\n" + error);
	}
}]]>
			</body>
		</do>
		<do access-modifier="private" name="UpdateLayout" display-name="UpdateLayout" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[Splitter.Visible = TreeVisible;
Splitter.SizeLimits.MinWidth = TreeVisible ? 4 : 0;
Splitter.SizeLimits.MaxWidth = Splitter.SizeLimits.MinWidth;

ItemTree.Visible = TreeVisible;
ItemTree.SizeLimits.MinWidth = TreeVisible ? Splitter.Distance : 0;
ItemTree.SizeLimits.MaxWidth = ItemTree.SizeLimits.MinWidth;]]>
			</body>
		</do>
		<do access-modifier="private" name="GetLayoutFilePath" display-name="GetLayoutFilePath" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
			<body kind="om">
				<![CDATA[folderPath: string = unit.ProductInfo.GetUserDataFolder();
return Files.CombinePath(folderPath, "layout.json");]]>
			</body>
		</do>
	</object>
	<object access-modifier="private" name="Layout" display-name="Layout" uuid="e6a99399-4c05-4150-85a9-15261e714bc8" base-type="LinearLayout" base-type-id="800edd71-7303-408c-890b-8346e98f5718" ver="5" description="" cardinal="1">
		<designed target="Orientation" value="1" ver="5"/>
		<designed target="Gap" value="0" ver="5"/>
	</object>
	<object access-modifier="private" name="Files" display-name="Files" uuid="2ca687ba-7620-42ff-8ff8-b71224991fad" base-type="FileSystem" base-type-id="34d744f9-7303-4077-a3f7-9c06c0945512" ver="5">
		<designed target="RootPath" value="/" ver="5"/>
	</object>
	<object access-modifier="private" name="pTheme" display-name="Тема оформления" uuid="e0344e33-04d3-44b5-a2df-9ff87ac35e8e" base-type="Theme" base-type-id="05d4d7df-0f8e-4ec1-ac85-b5460e30af81" base-const="true" base-ref="true" ver="5"/>
	<do access-modifier="private" name="SaveSignals" display-name="SaveSignals" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<param access-modifier="private" name="filePath" display-name="" uuid="33a8815d-6894-4b31-bd03-b38fd4e3577d" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		<body kind="javascript">
			<![CDATA[try
{
	//секция записи серверов
	var servers = [
		{ 'active': ApSource.Active, 'location': ApSource.Location, 'port': ApSource.Port }
	];

	//секция записи сигналов
	var items = JSON.parse(ItemTable.GetItems());

	var data = {
		'Servers': servers,
		'Signals': items
	};
	Files.WriteTextFile(filePath, JSON.stringify(data, null, 2));
}
catch(error)
{
	log("Не удалось сохранить список сигналов "  + filePath + ":\n" + error);
}]]>
		</body>
	</do>
	<do access-modifier="private" name="LoadSignals" display-name="LoadSignals" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<param access-modifier="private" name="filePath" display-name="" uuid="fd4c520e-9f45-4687-89ee-7ad5750aeba2" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		<body kind="javascript">
			<![CDATA[if (Files.Exists(filePath))
{
	try
	{
		var data = JSON.parse(Files.ReadTextFile(filePath));
		
		var servers = data.Servers;
		if (servers != undefined && servers.length > 0)
		{
			var server = servers[0];
			ApSource.Update(server.active, server.location, server.port);
		}

		var items = data.Signals;
		if (items != undefined && items.length > 0)
		{
			ItemTable.LoadItems(JSON.stringify(items));
		}
	}
	catch (error)
	{
		log("Не удалось загрузить список сигналов из "  + filePath + ":\n" + error);
	}
}]]>
		</body>
	</do>
	<do access-modifier="private" name="Connect" display-name="Connect" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[ApSource.Update(true, location, port);]]>
		</body>
		<param access-modifier="private" name="location" display-name="" uuid="c000595e-0a0d-4567-ac8b-78e675430a91" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		<param access-modifier="private" name="port" display-name="" uuid="84b0623d-8005-4733-9b9d-72b1cd23658b" base-type="uint2" base-type-id="ae923ad8-8b75-4813-8121-36efe3cc8c12" ver="5"/>
	</do>
	<do access-modifier="private" name="Disconnect" display-name="Disconnect" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[ApSource.Active = false;]]>
		</body>
	</do>
	<object access-modifier="private" name="ItemTree" display-name="ItemTree" uuid="6a5cc5b3-f86b-4400-925e-b3b4bbd0e012" base-type="ApItemTree" base-type-id="c334bfb4-cb34-44c9-8ba1-4961a2834b3b" ver="5">
		<designed target="X" value="0" ver="5"/>
		<designed target="Y" value="0" ver="5"/>
		<designed target="Rotation" value="0" ver="5"/>
		<designed target="Width" value="250" ver="5"/>
		<designed target="Height" value="400" ver="5"/>
		<init target="pTheme" ver="5" ref="here.private.theme"/>
		<object access-modifier="private" name="DragStarted" display-name="DragStarted" uuid="fde68083-1590-49de-8719-0945a2b8cb11" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
				<body kind="om">
					<![CDATA[info: string = GetCurrentItemInfo();
if (info != "")
{
	here.private.Drag.Image = Tree.GetItemIconPath(Tree.CurrentItem, false);
	here.private.Drag.SetText("{\"data\":[" + info + "]}");
	here.private.Drag.DoDragDrop();
}]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="DoubleClicked" display-name="DoubleClicked" uuid="0c7ebe58-c027-443b-9759-bc3f43465cde" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
				<body kind="om">
					<![CDATA[info: string = GetCurrentItemInfo();
if (info != "")
	ItemTable.AddSignalToTable( "{\"data\":[" + info + "]}");]]>
				</body>
			</do-on>
		</object>
		<init target="pDragStarted" ver="5" ref="DragStarted"/>
		<init target="pDoubleClicked" ver="5" ref="DoubleClicked"/>
		<init target="init_ApSource" ver="5" ref="ApSource"/>
		<object access-modifier="private" name="OpenContextMenu" display-name="OpenContextMenu" uuid="075ff23f-0a0c-4cd5-8a58-30774c36af4f" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-new" form-by-id="false">
				<object access-modifier="private" uuid="4826d0b4-1702-4f70-911f-cf8ab4c7a74a" base-type="Menu" base-type-id="07bb4545-980a-4140-bbaa-4d1397447864" ver="5">
					<init target="Items" ver="5">
						<expr>
							<![CDATA[GetMenuItems()]]>
						</expr>
					</init>
					<init target="pResult" ver="5" ref="MenuResult"/>
					<init target="pAction" ver="5" ref="OnMenuClick"/>
					<init target="WindowX" ver="5">
						<expr>
							<![CDATA[ItemTree.Tree.ScreenX(ItemTree.Tree.MouseX, ItemTree.Tree.MouseY)]]>
						</expr>
					</init>
					<init target="WindowY" ver="5">
						<expr>
							<![CDATA[ItemTree.Tree.ScreenY(ItemTree.Tree.MouseX, ItemTree.Tree.MouseY)]]>
						</expr>
					</init>
				</object>
			</do-on>
		</object>
		<object access-modifier="private" name="MenuResult" display-name="MenuResult" uuid="9e5835a9-1844-4a3a-bebb-4714e28f6a99" base-type="MenuResult" base-type-id="0fe7658c-92f4-4af7-b038-3594414ac651" ver="5" description="" cardinal="1"/>
		<object access-modifier="private" name="OnMenuClick" display-name="OnMenuClick" uuid="98c10ef9-7901-4db0-a2a7-9e199dc1c1ae" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
				<body kind="javascript">
					<![CDATA[if (MenuResult.Id == "add_to_inspector")
{
	var json = GetCurrentItemInfo();
	var info = JSON.parse(json);
	ItemTable.Add(info.tag, info.dataType);
}
else if (MenuResult.Id == "refresh")
{
	ItemTree.Tree.Refresh(ItemTree.Tree.CurrentItem);
}]]>
				</body>
			</do-on>
		</object>
		<do access-modifier="private" name="GetMenuItems" display-name="GetMenuItems" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
			<body kind="javascript">
				<![CDATA[var items = [{
        'id': "add_to_inspector",
        'title': "Добавить в инспектор сигналов",
        'icon': "Explorer_Icons/Add16.png",
        'active': ItemTree.GetCurrentItemInfo() != ""
    }, {
        'title': "-"
    }, {
        'id': "refresh",
        'title': "Обновить",
        'active': ItemTree.Tree.CurrentItem != ""
    }
];

return JSON.stringify(items);]]>
			</body>
		</do>
		<init target="pMouseRightClicked" ver="5" ref="OpenContextMenu"/>
		<object access-modifier="private" name="SizeLimits" display-name="SizeLimits" uuid="d3ce449c-3a11-494a-9dae-259431bcc373" base-type="LayoutSizeLimits" base-type-id="10342c1f-560b-4160-9de5-7e2c08026f47" ver="5" description="" cardinal="1">
			<designed target="MinWidth" value="250" ver="5"/>
			<designed target="MinHeight" value="0" ver="5"/>
			<designed target="MaxWidth" value="250" ver="5"/>
			<designed target="MaxHeight" value="16777215" ver="5"/>
		</object>
	</object>
	<object access-modifier="private" name="Splitter" display-name="Splitter" uuid="066e13c6-3423-440f-9167-6f7f57bc8886" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="5">
		<designed target="X" value="250" ver="5"/>
		<designed target="Y" value="0" ver="5"/>
		<designed target="Rotation" value="0" ver="5"/>
		<designed target="Scale" value="1" ver="5"/>
		<designed target="Visible" value="true" ver="5"/>
		<designed target="Enabled" value="true" ver="5"/>
		<designed target="Tooltip" value="" ver="5"/>
		<designed target="Width" value="4" ver="5"/>
		<designed target="Height" value="400" ver="5"/>
		<designed target="RoundingRadius" value="0" ver="5"/>
		<designed target="PenColor" value="0xff808080" ver="5"/>
		<designed target="PenStyle" value="1" ver="5"/>
		<designed target="PenWidth" value="1" ver="5"/>
		<designed target="BrushColor" value="0xfff0f0f0" ver="5"/>
		<designed target="BrushStyle" value="1" ver="5"/>
		<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="5" event="MouseEnter">
			<body kind="om">
				<![CDATA[MouseIsOver = true;]]>
			</body>
		</do-on>
		<do-on access-modifier="private" name="Handler_5" display-name="Handler_5" ver="5" event="MouseLeave">
			<body kind="om">
				<![CDATA[MouseIsOver = false;
bPressed = false;]]>
			</body>
		</do-on>
		<object access-modifier="private" name="bPressed" display-name="bPressed" uuid="cfd3fd85-b68c-49a3-b101-cb4cfbaa8888" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5"/>
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="MousePress">
			<body kind="om">
				<![CDATA[bPressed = true;]]>
			</body>
		</do-on>
		<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="MouseRelease">
			<body kind="om">
				<![CDATA[bPressed = false;]]>
			</body>
		</do-on>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="MouseMove">
			<body kind="om">
				<![CDATA[if (bPressed)
{
	distance: double = Distance + event.X;
	
	min: double = 30;
	if (distance < min)
		distance = min;
		
	max: double = parent.Width - 30;
	if (distance > max)
		distance = max;
	
	if (Distance != distance)
	{
		Distance = distance;
		ItemTree.SizeLimits.MinWidth = Distance;
		ItemTree.SizeLimits.MaxWidth = Distance;
	}
}]]>
			</body>
		</do-on>
		<designed target="ZValue" value="0" ver="5"/>
		<designed target="Opacity" value="1" ver="5"/>
		<do-trace access-modifier="private" target="PenColor" ver="5">
			<body>
				<![CDATA[private.theme.BorderColor]]>
			</body>
		</do-trace>
		<do-trace access-modifier="private" target="BrushColor" ver="5">
			<body>
				<![CDATA[MouseIsOver ? private.theme.SelectionColor : private.theme.BackgroundColor]]>
			</body>
		</do-trace>
		<object access-modifier="private" name="MouseIsOver" display-name="MouseIsOver" uuid="c69183b0-6c1e-4f50-ad75-41eb77d5215f" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5"/>
		<object access-modifier="private" name="SizeLimits" display-name="SizeLimits" uuid="68bdc455-9a7b-428b-aca2-a91de02303fe" base-type="LayoutSizeLimits" base-type-id="10342c1f-560b-4160-9de5-7e2c08026f47" ver="5" description="" cardinal="1">
			<designed target="MinWidth" value="4" ver="5"/>
			<designed target="MinHeight" value="0" ver="5"/>
			<designed target="MaxWidth" value="4" ver="5"/>
			<designed target="MaxHeight" value="16777215" ver="5"/>
		</object>
		<object access-modifier="private" name="Distance" display-name="Distance" uuid="39c07614-cf89-47b8-8f66-3f8e4b02ccb5" base-type="float8" base-type-id="7ad62ecf-96dd-4751-9b96-e77954b44409" ver="5" description="" cardinal="1"/>
		<designed target="Flip" value="0" ver="5"/>
		<init target="Distance" ver="5" value="250"/>
	</object>
	<object access-modifier="private" name="ItemTable" display-name="ItemTable" uuid="9e4cc256-ebe2-47cd-9b4e-4b33afb3c637" base-type="SignalInspector" base-type-id="d1d2812d-53dc-43ce-a92a-c3167d8e9e0f" ver="5" cardinal="1">
		<designed target="X" value="254" ver="5"/>
		<designed target="Y" value="0" ver="5"/>
		<designed target="Rotation" value="0" ver="5"/>
		<designed target="Width" value="746" ver="5"/>
		<designed target="Height" value="400" ver="5"/>
		<object access-modifier="private" name="Drop" display-name="Drop" uuid="6d59f1ed-c05e-4524-9f7d-d93236c6f09e" base-type="DragNDrop" base-type-id="c4ddb32f-3653-44c8-be57-3a595e10c2fb" ver="5">
			<designed target="DragEnabled" value="false" ver="5"/>
			<designed target="DropEnabled" value="true" ver="5"/>
			<designed target="Image" value="." ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="OnDrop">
				<body kind="om">
					<![CDATA[AddSignalToTable(data.GetText());]]>
				</body>
			</do-on>
		</object>
		<do access-modifier="private" name="AddSignalToTable" display-name="AddSignalToTable" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="javascript">
				<![CDATA[if (signalDataJSON != "")
{
	var signalData = JSON.parse(signalDataJSON).data;
	Add(signalData[0].tag, signalData[0].dataType);
}]]>
			</body>
			<param access-modifier="private" name="signalDataJSON" display-name="" uuid="d0c4ace0-e7b3-4943-ba34-e0a0d27f603e" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</do>
		<init target="pTheme" ver="5" ref="here.private.theme"/>
		<object access-modifier="private" name="LayoutWeight" display-name="LayoutWeight" uuid="d216adcc-2171-48b4-b503-f83b54555ee1" base-type="LayoutWeight" base-type-id="8f3d975c-9645-4288-9406-a8dda0527008" ver="5" description="" cardinal="1">
			<designed target="Weight" value="10000" ver="5"/>
		</object>
		<init target="pLog" ver="5" ref="initLogView"/>
		<init target="init_ApSource" ver="5" ref="here.ApSource"/>
	</object>
	<param access-modifier="private" name="initLogView" display-name="initLogView" uuid="5f5a1485-a4e7-43b6-ac12-bfecac47c804" base-type="LogView" base-type-id="493c7166-bdbb-4717-8f49-2906ed88e930" base-const="true" base-ref="true" ver="5" description=""/>
	<object access-modifier="private" name="ApSource" display-name="ApSource" uuid="c75ae3d6-4b18-4d94-a3fa-a88eb9fb8f89" base-type="ApSource" base-type-id="966603da-f05e-4b4d-8ef0-919efbf8ab2c" ver="5" description="" cardinal="1">
		<designed target="Location" value="127.0.0.1" ver="5"/>
		<designed target="Port" value="4388" ver="5"/>
		<designed target="HistoryPort" value="4950" ver="5"/>
		<designed target="Path" value="" ver="5"/>
		<designed target="Active" value="false" ver="5"/>
		<designed target="ReAdvise" value="0" ver="5"/>
		<designed target="ClientDisplayName" value="HMI" ver="5"/>
		<designed target="ClientId" value="HMI" ver="5"/>
		<init target="ClientDisplayName" ver="5">
			<expr>
				<![CDATA[unit.ProductInfo.PlatformName]]>
			</expr>
		</init>
		<do access-modifier="private" name="Update" display-name="Update" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[if (Active != active || Location != location || Port != port)
{
	Active = false;
	Location = location;
	Port = port;
	Active = active;
}]]>
			</body>
			<param access-modifier="private" name="active" display-name="" uuid="f086646e-9972-4c96-9641-5205cb15fc6b" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5"/>
			<param access-modifier="private" name="location" display-name="" uuid="f201cab7-9ccd-47f6-9951-11aa00d597af" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
			<param access-modifier="private" name="port" display-name="" uuid="3b187ad8-29bf-49da-bbd0-ff2fadaa8e25" base-type="uint2" base-type-id="ae923ad8-8b75-4813-8121-36efe3cc8c12" ver="5"/>
		</do>
	</object>
	<designed target="Flip" value="0" ver="5"/>
	<object access-modifier="private" name="TreeVisible" display-name="Отображать дерево" uuid="8c2f1068-19ad-4679-80a5-ea63462dc26e" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5" description="" cardinal="1">
		<object access-modifier="private" name="oldValue" display-name="oldValue" uuid="922a48fc-9cca-47db-8cc0-e4042415d00d" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5" description="" cardinal="1"/>
		<init target="oldValue" ver="5" value="true"/>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[if (oldValue != value)
{
	oldValue = value;	
	private.UpdateLayout();
}]]>
			</body>
		</do-on>
	</object>
	<init target="TreeVisible" ver="5" value="true"/>
</type>

