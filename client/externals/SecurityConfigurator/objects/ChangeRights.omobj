<type access-modifier="private" name="ChangeRights" display-name="ChangeRights" uuid="24f489ad-7aec-41a5-b0f7-8ed917e6f052" base-type="Form" base-type-id="ffaf5544-6200-45f4-87ec-9dd24558a9d5" ver="5">
	<designed target="X" value="0" ver="5"/>
	<designed target="Y" value="0" ver="5"/>
	<designed target="Rotation" value="0" ver="5"/>
	<designed target="Scale" value="1" ver="5"/>
	<designed target="Visible" value="true" ver="5"/>
	<designed target="Enabled" value="true" ver="5"/>
	<designed target="Tooltip" value="" ver="5"/>
	<designed target="Width" value="750" ver="5"/>
	<designed target="Height" value="400" ver="5"/>
	<designed target="PenColor" value="4278190080" ver="5"/>
	<designed target="PenStyle" value="0" ver="5"/>
	<designed target="PenWidth" value="1" ver="5"/>
	<designed target="BrushColor" value="0xfff0f0f0" ver="5"/>
	<designed target="BrushStyle" value="1" ver="5"/>
	<designed target="WindowX" value="0" ver="5"/>
	<designed target="WindowY" value="0" ver="5"/>
	<designed target="WindowWidth" value="750" ver="5"/>
	<designed target="WindowHeight" value="400" ver="5"/>
	<designed target="WindowCaption" value="Выбор прав" ver="5"/>
	<designed target="ShowWindowCaption" value="true" ver="5"/>
	<designed target="ShowWindowMinimize" value="false" ver="5"/>
	<designed target="ShowWindowMaximize" value="false" ver="5"/>
	<designed target="ShowWindowClose" value="true" ver="5"/>
	<designed target="AlwaysOnTop" value="false" ver="5"/>
	<designed target="WindowSizeMode" value="0" ver="5"/>
	<designed target="WindowBorderStyle" value="1" ver="5"/>
	<designed target="WindowState" value="0" ver="5"/>
	<designed target="WindowScalingMode" value="0" ver="5"/>
	<designed target="MonitorNumber" value="0" ver="5"/>
	<designed target="WindowPosition" value="3" ver="5"/>
	<designed target="WindowCloseMode" value="1" ver="5"/>
	<object access-modifier="private" name="private" display-name="private" uuid="ece2b66b-f802-4197-9bb2-790f80fd0d12" base-type="" base-type-id="00000000-0000-0000-0000-000000000000" ver="5">
		<object access-modifier="private" name="Queue" display-name="Queue" uuid="d1456e8e-b9b1-4fb4-9d23-f7f02a06bd6b" base-type="" base-type-id="00000000-0000-0000-0000-000000000000" ver="5">
			<object access-modifier="private" name="CurrentIndex" display-name="CurrentIndex" uuid="efa00e39-1321-48f9-9afc-44e837f86e22" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
			<object access-modifier="private" name="AppCount" display-name="AppCount" uuid="8e2416f2-3201-478a-b6f0-dfd68b6c5e8f" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
			<object access-modifier="private" name="AppList" display-name="AppList" uuid="92b1b9e7-446c-4210-be06-5d2738b90a43" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
			<do access-modifier="private" name="Init" display-name="Init" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
				<param access-modifier="private" name="AppListJSON" display-name="" uuid="3a846233-46df-47b8-acaa-3127ebc66b3a" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
				<body kind="javascript">
					<![CDATA[var appList = JSON.parse(AppListJSON).data;

AppList = JSON.stringify(appList);
AppCount = appList.length;
CurrentIndex = 0;

Next();]]>
				</body>
			</do>
			<do access-modifier="private" name="Next" display-name="Next" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
				<body kind="javascript">
					<![CDATA[if (AppList != "") {
	var appList = JSON.parse(AppList);

	if (CurrentIndex < AppCount) {
		Application.Load(appList[CurrentIndex].applicationName);
	}
}]]>
				</body>
			</do>
			<do access-modifier="private" name="IsEnd" display-name="IsEnd" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
				<body kind="om">
					<![CDATA[return CurrentIndex == AppCount || AppCount == 0;]]>
				</body>
			</do>
			<do access-modifier="private" name="IsReadComplete" display-name="IsReadComplete" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
				<body kind="om">
					<![CDATA[CurrentIndex += 1;	

if (IsEnd()) 
	TokensTree.LoadData(ResultData);
else
	Next();]]>
				</body>
			</do>
			<do access-modifier="private" name="DoDataProcessing" display-name="DoDataProcessing" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
				<param access-modifier="private" name="appId" display-name="" uuid="33c3b315-0bea-4b50-bc24-ca96efb8e11e" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
				<param access-modifier="private" name="tokenListJSON" display-name="" uuid="16bba5c4-0d85-423c-a53a-74a85b75768c" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
				<body kind="javascript">
					<![CDATA[var resultDataContent;

try {
	resultDataContent = JSON.parse(ResultData);
} catch (err) {
	resultDataContent = {};
}

try {
	var tokenList = JSON.parse(tokenListJSON).data;
} catch (err) {
	return;
}

//Добавляем новый элемент к обработанным данным
if (!resultDataContent.hasOwnProperty(appId) && tokenList.length > 0){
	let currentAppTokens = [];
	for (let currentToken of tokenList) {
		currentAppTokens.push({
			"type": currentToken.tokenType,
			"name": currentToken.tokenName,
			"description": currentToken.tokenDescription
		});
	}
	resultDataContent[appId] = currentAppTokens;
}

ResultData = JSON.stringify(resultDataContent);

//Обработка текущего приложения завершена
IsReadComplete();
]]>
				</body>
			</do>
			<object access-modifier="private" name="ResultData" display-name="ResultData" uuid="3c4b6410-00ac-445d-8c07-a2e8b83bfba7" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</object>
		<do access-modifier="private" name="IsDeleteMode" display-name="IsDeleteMode" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
			<body kind="om">
				<![CDATA[return CurrentRights != "";]]>
			</body>
		</do>
		<do access-modifier="private" name="LoadCurrentRights" display-name="LoadCurrentRights" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="javascript">
				<![CDATA[//Функция получения набора токенов из списка прав пользователя/группы

var rightsContent = JSON.parse(rightsJSON).data;
var tokenData = {};
let currentAppName;

//Создаем поля с имнем приложения
for (let right of rightsContent){
	currentAppName = right.appName;
	if (!tokenData.hasOwnProperty(currentAppName))
		tokenData[currentAppName] = [];
}

for (let right of rightsContent) {
	currentAppName = right.appName;
	if (tokenData.hasOwnProperty(currentAppName)){
		tokenData[currentAppName].push(
			{
				"type": right.tokenType,
				"name": right.tokenName,
				"description": right.tokenDescription
			}
		);
	}
}

TokensTree.LoadData(JSON.stringify(tokenData));]]>
			</body>
			<param access-modifier="private" name="rightsJSON" display-name="" uuid="e983e87a-f050-416e-b2bf-2d33a899ee22" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</do>
		<object access-modifier="private" name="incomCloseRequest" display-name="incomCloseRequest" uuid="4f182ddb-5c29-4602-8613-d9a7c8bff73b" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5" description="" cardinal="1">
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
				<body kind="om">
					<![CDATA[if (value)
{
	//если в режиме удаления ролей или приложения обработаны
	if (IsDeleteMode() || Queue.IsEnd())
		Close();
}]]>
				</body>
			</do-on>
		</object>
		<do access-modifier="private" name="PreparingRightsData" display-name="PreparingRightsData" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="javascript">
				<![CDATA[//Подготовка массива прав для добавления/удаления

const tokensTree = TokensTree;
const getDefaultStringValue = TokensDefinition.GetDefaultStringValue;

var selectedTokensId = [];
let rigthsData = [];
let right = {};

let appNodesEnum = JSON.parse(tokensTree.EnumChildrenJSON(""));
for (let appNodeId of appNodesEnum) {	
	let tokensNodeEnum = JSON.parse(tokensTree.EnumChildrenJSON(appNodeId));
	for (let tokenNodeId of tokensNodeEnum ){
		if (tokensTree.GetItemCheckState(tokenNodeId,0) == tokensTree.States.CHECKED){
			right = {};
			right.AppName =  tokensTree.GetItemData(tokenNodeId, 1);
			right.TokenName =  tokensTree.GetItemData(tokenNodeId, 3);
			if (!IsDeleteMode()){
				let type = tokensTree.GetItemData(tokenNodeId, 2);
				if (type == "bool") {
					right.Type = "1";
					right.TokenValueAllow = "TRUE";
					right.TokenValueDeny = "FALSE";
				} else if (type == "string") {
					right.Type = "0";
					right.TokenValueAllow = getDefaultStringValue(right.AppName, type, right.TokenName);
					right.TokenValueDeny = "";
				}	
			}
			rigthsData.push(right);	
		}
	}
}
OutputData.Value = JSON.stringify({data:rigthsData});]]>
			</body>
		</do>
	</object>
	<object access-modifier="private" name="Debug" display-name="Debug" uuid="6247417e-6370-4683-beca-c12168efea9f" base-type="DebugTool" base-type-id="43946044-139a-43f4-a7b8-19a6074ffc56" ver="5"/>
	<object access-modifier="private" name="pTheme" display-name="pTheme" uuid="7e347fa0-bd6b-4e09-b11a-5435d71cbce6" base-type="Theme" base-type-id="05d4d7df-0f8e-4ec1-ac85-b5460e30af81" base-const="true" base-ref="true" ver="5" description=""/>
	<object access-modifier="private" name="Application" display-name="Application" uuid="e803fafb-2416-4584-a805-71a6deb03b25" base-type="SecurityManagerApplication" base-type-id="cfc3985c-54fc-4fe4-b001-cade048d6ee0" ver="5">
		<designed target="ApplicationName" value="" ver="5"/>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="LoadComplete">
			<body kind="om">
				<![CDATA[private.Queue.DoDataProcessing(ApplicationID, GetTokensList());

//Прерывание загрузки при получении сигнала закрыть
if (private.incomCloseRequest){
	Close();
}]]>
			</body>
		</do-on>
		<init target="SecurityManager" ver="5" ref="here.SecurityManager"/>
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="LoadFailed">
			<body kind="om">
				<![CDATA[Debug.Log(GetErrorDescriptionByCode(FailReasonCode));]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="TokensDefinition" display-name="TokensDefinition" uuid="c6186df4-264e-4ba2-94ba-edcd198d09d9" base-type="TokensDefinition" base-type-id="2d057de8-3722-4426-b142-42fa7ada0520" ver="5"/>
	<object access-modifier="private" name="TokensTree" display-name="TokensTree" uuid="f9a7fa19-fa61-4691-83ac-3c0011b6016f" base-type="Tree" base-type-id="bebad81f-83c4-4dc1-8ac4-e7fe7b6ee966" ver="5">
		<designed target="X" value="0" ver="5"/>
		<designed target="Y" value="0" ver="5"/>
		<designed target="ZValue" value="0" ver="5"/>
		<designed target="Rotation" value="0" ver="5"/>
		<designed target="Scale" value="1" ver="5"/>
		<designed target="Visible" value="true" ver="5"/>
		<designed target="Opacity" value="1" ver="5"/>
		<designed target="Enabled" value="true" ver="5"/>
		<designed target="Tooltip" value="" ver="5"/>
		<designed target="Width" value="750" ver="5"/>
		<designed target="Height" value="355" ver="5"/>
		<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0" ver="5"/>
		<designed target="FontColor" value="0xff000000" ver="5"/>
		<designed target="BackgroundColor" value="0xffffffff" ver="5"/>
		<designed target="FrameVisible" value="true" ver="5"/>
		<designed target="ColumnCount" value="5" ver="5"/>
		<do access-modifier="private" name="Init" display-name="Init" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[//настройка дерева

SetColumnName("Право", 0); //
SetColumnWidth(0,250);

SetColumnName("AppName", 1);
SetColumnHidden(1, true); 

SetColumnName("TokenType", 2);
SetColumnHidden(2, true); 

SetColumnName("TokenName", 3);
SetColumnHidden(3, true); 

SetColumnName("Описание", 4);
SetColumnHidden(4, false);


Enabled = false;]]>
			</body>
		</do>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ItemClicked">
			<body kind="om">
				<![CDATA[state: uint1 = GetItemCheckState(itemId,0);
if (state == States.CHECKED) {
	SetItemCheckState(itemId, States.UNCHECKED, 0);
} else if (state == States.UNCHECKED || state == States.PARTIALLY) {
	SetItemCheckState(itemId, States.CHECKED, 0);
}]]>
			</body>
		</do-on>
		<designed target="HeaderVisible" value="true" ver="5"/>
		<designed target="CurrentItem" value="" ver="5"/>
		<object access-modifier="private" name="States" display-name="States" uuid="6d36957d-720a-4174-b762-8285ae196a42" base-type="" base-type-id="00000000-0000-0000-0000-000000000000" ver="5" description="" cardinal="1">
			<object access-modifier="private" name="UNCHECKED" display-name="UNCHECKED" uuid="769d2853-d641-422b-bcb3-8835369452fa" base-type="uint1" base-type-id="f73099bc-ee13-42cf-82bb-87368b826707" ver="5" description="" cardinal="1"/>
			<object access-modifier="private" name="PARTIALLY" display-name="PARTIALLY" uuid="4511d4e9-024f-4f0b-a939-abcad52edea9" base-type="uint1" base-type-id="f73099bc-ee13-42cf-82bb-87368b826707" ver="5" description="" cardinal="1"/>
			<object access-modifier="private" name="CHECKED" display-name="CHECKED" uuid="a2f4f1dc-1b53-40f7-816f-d9f63e915e0c" base-type="uint1" base-type-id="f73099bc-ee13-42cf-82bb-87368b826707" ver="5" description="" cardinal="1"/>
			<init target="UNCHECKED" ver="5" value="0"/>
			<init target="PARTIALLY" ver="5" value="1"/>
			<init target="CHECKED" ver="5" value="2"/>
		</object>
		<do access-modifier="private" name="LoadData" display-name="LoadData" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="javascript">
				<![CDATA[//фунция заполнения дерева данными (сортировка данных выполняется только перед выводом в таблицу!)
//|caption|appName|tokenType|TokenName|Desk|
const getIconPathByToken = TokensDefinition.GetIconPath;	// выбор значков в зависимости от типа и имени токена

try {
	var appsTokenList = JSON.parse(tokenListJSON);
} catch (err) {
	return;
}

let appNodeId, tokenNodeId;
let appIterator = Object.entries(appsTokenList).sort((a, b) => a.toString().toLowerCase() > b.toString().toLowerCase() ? 1 : -1);
for (let [app, tokenData] of appIterator){
	appNodeId = AddItem("", app);
	SetItemData(appNodeId,"", 1);
	SetItemData(appNodeId,"Application", 2);
	SetItemAutoTristate(appNodeId, true, 0);
	SetItemCheckState(appNodeId, States.UNCHECKED, 0);
	for (let token of sortByField(tokenData, "name")){
		tokenNodeId = AddItem(appNodeId, token.name);
		SetItemData(tokenNodeId, app, 1);
		SetItemData(tokenNodeId, token.type, 2);
		SetItemData(tokenNodeId, token.name, 3);
		SetItemText(tokenNodeId, token.description, 4);			
		SetItemIconPath(tokenNodeId, getIconPathByToken(app, token.type, token.name), 0);
		SetItemCheckState(tokenNodeId, States.UNCHECKED, 0);
	}
}
Enabled = private.Queue.IsEnd();

//---------------------------------------------------
function sortByField(list, fieldName) {
    return list.sort((a, b) => a[fieldName].toString().toLowerCase() > b[fieldName].toString().toLowerCase() ? 1 : -1);
}
]]>
			</body>
			<param access-modifier="private" name="tokenListJSON" display-name="" uuid="77096c85-ef78-40a6-a690-6a066d408a63" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</do>
		<designed target="Flip" value="0" ver="5"/>
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="ItemCheckStateChanged">
			<body kind="javascript">
				<![CDATA[btnApply.Enabled = (getCheckedTokensCount() > 0);

//---------------------------------------------------
function getCheckedTokensCount() {
	let checkedCount = 0;
	nextNode("");
	return checkedCount;


	function nextNode(itemId) {
		if (ChildCount(itemId) > 0) {
			for (let i = 0; i < ChildCount(itemId); i++) {
				nextNode(GetItemId(itemId, i));
			}
		} else {
			if (GetItemCheckState(itemId, 0) == States.CHECKED)
				checkedCount++;
		}		
	}
}]]>
			</body>
		</do-on>
		<do-trace access-modifier="private" target="BackgroundColor" ver="5">
			<body>
				<![CDATA[pTheme.EditorBrushColor]]>
			</body>
		</do-trace>
		<do-trace access-modifier="private" target="FontColor" ver="5">
			<body>
				<![CDATA[pTheme.EditorFontColor]]>
			</body>
		</do-trace>
	</object>
	<object access-modifier="private" name="btnApply" display-name="btnApply" uuid="f39a002d-9331-4384-b27b-2169b0c766d2" base-type="Button" base-type-id="61e46e4a-827f-4dd2-ac8a-b68bcaddf442" ver="5">
		<designed target="X" value="590" ver="5"/>
		<designed target="Y" value="365" ver="5"/>
		<designed target="Rotation" value="0" ver="5"/>
		<designed target="Scale" value="1" ver="5"/>
		<designed target="Visible" value="true" ver="5"/>
		<designed target="Enabled" value="true" ver="5"/>
		<designed target="Tooltip" value="" ver="5"/>
		<designed target="Width" value="70" ver="5"/>
		<designed target="Height" value="25" ver="5"/>
		<designed target="Text" value="OK" ver="5"/>
		<designed target="TextAlignment" value="132" ver="5"/>
		<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="5"/>
		<designed target="FontColor" value="0xff000000" ver="5"/>
		<designed target="OnClickFontColor" value="0xff000000" ver="5"/>
		<designed target="OnHoverFontColor" value="0xff000000" ver="5"/>
		<designed target="BrushColor" value="0xfff0f0f0" ver="5"/>
		<designed target="BrushStyle" value="1" ver="5"/>
		<designed target="OnClickBrushColor" value="0xffa0a0a0" ver="5"/>
		<designed target="OnClickBrushStyle" value="1" ver="5"/>
		<designed target="OnHoverBrushColor" value="0xffffffff" ver="5"/>
		<designed target="OnHoverBrushStyle" value="1" ver="5"/>
		<designed target="PenColor" value="0xff000000" ver="5"/>
		<designed target="PenStyle" value="1" ver="5"/>
		<designed target="PenWidth" value="1" ver="5"/>
		<designed target="OnClickPenColor" value="4278190080" ver="5"/>
		<designed target="OnClickPenStyle" value="1" ver="5"/>
		<designed target="OnClickPenWidth" value="1" ver="5"/>
		<designed target="OnHoverPenColor" value="4278190080" ver="5"/>
		<designed target="OnHoverPenStyle" value="1" ver="5"/>
		<designed target="OnHoverPenWidth" value="1" ver="5"/>
		<designed target="Checkable" value="false" ver="5"/>
		<designed target="DisabledFontColor" value="0xff808080" ver="5"/>
		<designed target="DisabledBrushColor" value="0xfff0f0f0" ver="5"/>
		<designed target="DisabledBrushStyle" value="1" ver="5"/>
		<designed target="DisabledPenColor" value="4288716960" ver="5"/>
		<designed target="DisabledPenStyle" value="1" ver="5"/>
		<designed target="DisabledPenWidth" value="1" ver="5"/>
		<designed target="ZValue" value="0" ver="5"/>
		<designed target="Opacity" value="1" ver="5"/>
		<init target="Text" ver="5" value=""/>
		<designed target="Checked" value="false" ver="5"/>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="MouseRelease">
			<body kind="om">
				<![CDATA[private.PreparingRightsData();
pAction.Invoke();
Close();]]>
			</body>
		</do-on>
		<init target="Enabled" ver="5" value="false"/>
		<designed target="Flip" value="0" ver="5"/>
	</object>
	<object access-modifier="private" name="btnCancel" display-name="btnCancel" uuid="1f135b84-00d6-402a-a1dc-740a94ce15f0" base-type="Button" base-type-id="61e46e4a-827f-4dd2-ac8a-b68bcaddf442" ver="5">
		<designed target="X" value="670" ver="5"/>
		<designed target="Y" value="365" ver="5"/>
		<designed target="Rotation" value="0" ver="5"/>
		<designed target="Scale" value="1" ver="5"/>
		<designed target="Visible" value="true" ver="5"/>
		<designed target="Enabled" value="true" ver="5"/>
		<designed target="Tooltip" value="" ver="5"/>
		<designed target="Width" value="70" ver="5"/>
		<designed target="Height" value="25" ver="5"/>
		<designed target="Text" value="Отмена" ver="5"/>
		<designed target="TextAlignment" value="132" ver="5"/>
		<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="5"/>
		<designed target="FontColor" value="4278190080" ver="5"/>
		<designed target="OnClickFontColor" value="4278190080" ver="5"/>
		<designed target="OnHoverFontColor" value="4278190080" ver="5"/>
		<designed target="BrushColor" value="4293980400" ver="5"/>
		<designed target="BrushStyle" value="1" ver="5"/>
		<designed target="OnClickBrushColor" value="4288716960" ver="5"/>
		<designed target="OnClickBrushStyle" value="1" ver="5"/>
		<designed target="OnHoverBrushColor" value="4294967295" ver="5"/>
		<designed target="OnHoverBrushStyle" value="1" ver="5"/>
		<designed target="PenColor" value="4278190080" ver="5"/>
		<designed target="PenStyle" value="1" ver="5"/>
		<designed target="PenWidth" value="1" ver="5"/>
		<designed target="OnClickPenColor" value="4278190080" ver="5"/>
		<designed target="OnClickPenStyle" value="1" ver="5"/>
		<designed target="OnClickPenWidth" value="1" ver="5"/>
		<designed target="OnHoverPenColor" value="4278190080" ver="5"/>
		<designed target="OnHoverPenStyle" value="1" ver="5"/>
		<designed target="OnHoverPenWidth" value="1" ver="5"/>
		<designed target="ZValue" value="0" ver="5"/>
		<designed target="Opacity" value="1" ver="5"/>
		<designed target="Checkable" value="false" ver="5"/>
		<designed target="DisabledFontColor" value="4278190080" ver="5"/>
		<designed target="DisabledBrushColor" value="4288716960" ver="5"/>
		<designed target="DisabledBrushStyle" value="1" ver="5"/>
		<designed target="DisabledPenColor" value="4288716960" ver="5"/>
		<designed target="DisabledPenStyle" value="1" ver="5"/>
		<designed target="DisabledPenWidth" value="1" ver="5"/>
		<designed target="Checked" value="false" ver="5"/>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="MouseRelease" form-action="close"/>
		<designed target="Flip" value="0" ver="5"/>
	</object>
	<object access-modifier="private" name="SecurityManager" display-name="SecurityManager" uuid="80931db0-12c6-4758-847f-f1b2f31c9e88" base-type="SecurityManager" base-type-id="179958e0-f45a-40f3-9668-98e4ea2987da" ver="5">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="RequestAppListComplete">
			<body kind="om">
				<![CDATA[private.Queue.Init(JSONAppList);]]>
			</body>
		</do-on>
		<init target="SecurityContext" ver="5">
			<object access-modifier="private" uuid="5cf3a30c-ad72-4a61-8bf4-eacad5eb40be" base-type="SecurityContext" base-type-id="d9cb0fff-b70a-4e2d-833d-3f73cf74e0dd" ver="5"/>
		</init>
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="RequestAppListFailed">
			<body kind="om">
				<![CDATA[Debug.Log(GetErrorDescriptionByCode(FailReason));]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="CurrentRights" display-name="CurrentRights" uuid="10bdf6e2-b67c-4488-a17e-7b0045d31b66" base-type="notifying_string" base-type-id="14976fbf-36ab-415f-abc3-9f8fdc217351" ver="5"/>
	<designed target="ZValue" value="0" ver="5"/>
	<designed target="Opacity" value="1" ver="5"/>
	<object access-modifier="private" name="OutputData" display-name="OutputData" uuid="b959f9bb-dd47-4d60-9b12-9a86dd93a3eb" base-type="DialogResult" base-type-id="edf8f921-912c-457b-838d-25607e6715bb" base-const="true" base-ref="true" ver="5"/>
	<object access-modifier="private" name="pAction" display-name="pAction" uuid="1a48ca86-3bfc-4474-92af-7a30562b3428" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" base-const="true" base-ref="true" ver="5"/>
	<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="WindowSizeChanged">
		<body kind="om">
			<![CDATA[Width = WindowWidth;
Height = WindowHeight;
UpdateLayout();]]>
		</body>
	</do-on>
	<do access-modifier="private" name="UpdateLayout" display-name="UpdateLayout" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[TokensTree.Width = WindowWidth;
TokensTree.Height = WindowHeight - 40;

btnCancel.X = WindowWidth - btnCancel.Width - 10;
btnCancel.Y = WindowHeight - btnCancel.Height - 10;

btnApply.X = btnCancel.X - btnApply.Width - 10;
btnApply.Y = WindowHeight - btnApply.Height - 10;]]>
		</body>
	</do>
	<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="CloseRequested">
		<body kind="om">
			<![CDATA[private.incomCloseRequest = true;]]>
		</body>
	</do-on>
	<designed target="WindowIconPath" value="Security_Icons/RightEdit16.png" ver="5"/>
	<designed target="Flip" value="0" ver="5"/>
	<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="5" event="KeyPress">
		<body kind="om">
			<![CDATA[if (event.KeyCode == 82) // Enter
	btnApply.Click();
else if (event.KeyCode == 75) // Escape
	Close();]]>
		</body>
	</do-on>
	<do-trace access-modifier="private" target="BrushColor" ver="5">
		<body>
			<![CDATA[pTheme.BackgroundColor]]>
		</body>
	</do-trace>
	<do-on access-modifier="private" name="Handler_5" display-name="Handler_5" ver="5" event="WindowActivationChanged">
		<body kind="om">
			<![CDATA[Focus = true;]]>
		</body>
	</do-on>
	<do-on access-modifier="private" name="Handler_6" display-name="Handler_6" ver="5" event="AboutToOpen">
		<body kind="om">
			<![CDATA[TokensTree.Init();

if (private.IsDeleteMode())
{
	private.LoadCurrentRights(CurrentRights);
	btnApply.Text = "Удалить";
} 
else
{
	SecurityManager.RequestAppList();
	btnApply.Text = "Добавить";
}]]>
		</body>
	</do-on>
</type>

